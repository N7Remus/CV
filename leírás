Szoftveres követelmények:
	A környezet amire szükségünk lesz:
		Python 3.6 vagy újjab
		Python 3 modulok:
		  -scikit-image modul
		  -imutils modul
		  -opencv-python modul
		  -numpy modul
		  -os modul
		  -argparse modul
	A scan.py kód a git repómból : https://github.com/N7Remus/CV/blob/master/python/scan.py

  Tesztelve lett Manjaro linuxon, Ubuntu LTS 18.04 linuxon-en,és Windows 10-en.


	Linux alatt - telepítsük a csomagkezelőből a python3 csomagot, illetve a pip3 csomagot, majd telpítsük a modulokat is.
	Windows alatt - válasszunk egy python környezetet, majd telpítsük (a modulokat is).

	Teszteléshez én a PyCharm programot ajánlom, ami könnyíti a modul letöltést.
	https://www.jetbrains.com/pycharm/

	Windows specifikusan a Visual Studio is remek alternatíva lehet, mivel van neki egy kiváló python csomagja
	https://visualstudio.microsoft.com/

Webes rész: ----------------------------------------------------------------------------------------
	
	A webes rész PHP7.x-et használ, de egyszerűsége miatt visszafele is kompatibilis.
	A webszerver Apache 2.4 alatt fut.
	A fájlok elhelyezése tetszőlegesen történik, viszont a python fileok elérését, illetve a kész fájlokelérésének útvonalát
	meg kell adni a php-nak.(szerver oldali config)
	

Parancsoros rész:
Paraméterek :
scan.py [-h] -i IMAGE -o OUTPUT [-m_o MEDIAN_O] [-g_o GAUSS_O]
               [-b_o BILINEAR_O] [-n_o INVERT_O] [-c_o CLAHE_O]
               [-kv_o KVANTALAS_O] [-m MEDIAN] [-g GAUSS] [-b BILINEAR]
               [-n INVERT] [-c CLAHE] [-kv KVANTALAS] [-t TERMINAL]
Magyarázat
Megkövetelt paraméterek:
-i bemeneti kép elérési útja
-o kimeneti képek elérésí útvonalja

Opcionális paraméterek:
A bemeneti kép manipulálását befolyásoló paraméterek (ezek a módosítások a képet a scannelés elött módosítják)
-m_o = median filterezés-Só és bors zaj-ellen
-g_o = Gaussian zajcsökkentés-holmályosítja a képet
-b_o = bilineáris filter
-n_o = negatív kép
-c_o = kotraszt normalizálás
-kv_o = Kvantálás-quantization
 
 A kimeneti képe(ke)t befolyásoló paraméterek (megj.: ha a transzformáció meghiúsult, ezek a lépések nem fognak lefutni)
-m = median filterezés-Só és bors zaj-ellen
-g = Gaussian zajcsökkentés-holmályosítja a képet
-b = bilineáris filter
-n = negatív kép
-c = kotraszt normalizálás
-kv = Kvantálás-quantization
----------------------------------------------------------------------------------------

A tesztgépek hardware információi:

  Intel Xeon X3440 @ 4x 2.5GHz
  8GB-ram
  ------------------------
  Intel Xeon E5620 @ 4x 2.4GHz
  8GB-ram
  ------------------------
  Intel Xeon E5-2630 v4 @ 4x 2.2GHz
  8GB-ram
  ------------------------
  AMD Ryzen 5 2600 Six-Core @ 12x 3.5G
  32GB-ram
  ------------------------
  Core™ i5 3320M
  8GB-ram
  ------------------------
  Core™ i5 2520M
  8GB-ram
  ------------------------------------------------
Minimum követelmények:
  1.8 GHz Intel Core 2 Duo (vagy AMD CPU)	 , 
  (ajánlott minél nagyobb single core teljesítményű processzor használata a sebesség javítása miatt).
  
  1GB for XP / 2GB RAM for Vista/Win 7/Win10 / linuxon disztribúciótól függetlenül min 2GB ajánlott
  (A képek a memóriába lesznek betöltve szóval ez függ a képmérettől).

--------------------- Követelmények, a képet illetően ------------------------
Az optimális Kép főbb jellemzői:
  Az kép tartalmazza a teljes objektumot, melyet a felhasználó be szeretne scannelni.
  A fényviszonyok egységesek.
  A kép nem homályos.
  A kép nem pixeles.
  A képen az objektumot nem takarja el/ki semmi.
  Az objektum nincs árnyék alatt.
  Az objektum megfelelő szögben van befotózva.
  Megfelelő formátumú a kép (jpeg, jpg, png...)

A be scannnelést, gátló tényezők:
  Az objektum színárnyalatos, kontúr nélküli.
  Az objektum beleolvad a környezetébe.
  Nem jó formátumú kép (PL.: GIF).

--------------------- Működés ------------------------

  ----------------------------Források---------------------------------
https://docs.opencv.org/3.1.0/d4/d13/tutorial_py_filtering.html
https://people.csail.mit.edu/sparis/bf_course/
https://www.pyimagesearch.com
https://www.youtube.com/watch?v=C_zFhWdM4ic
illetve az órai példák
